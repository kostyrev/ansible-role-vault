---

- name: install python2-dnf for ansible
  become: yes
  raw: dnf -y install python2-dnf
  changed_when: False
  when: ansible_pkg_mgr == 'dnf'

- name: update apt
  apt:
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == 'Debian'

- name: install unzip
  package:
    name: unzip
    state: present

- block:
    - name: download hashicorp gpg key file from keybase
      get_url:
        url: https://keybase.io/hashicorp/key.asc
        dest: "{{ vault_download_dir }}/hashicorp.asc"
        validate_certs: "{{ vault_validate_certs }}"

    - name: install gnupg package
      become: yes
      package:
        name: gnupg
        state: present

    - name: import hashicorp gpg key
      command: gpg --import "{{ vault_download_dir }}/hashicorp.asc"
      changed_when: no

    - name: download vault checksum signature file
      get_url:
        url: "{{ vault_signature_url }}"
        dest: "{{ vault_download_dir }}/{{ vault_signature_file }}"
        validate_certs: "{{ vault_validate_certs }}"
        force: yes
  when: vault_verify_checksum_signature

- name: Get vault package checksum file
  get_url:
    url: "{{ vault_checksum_file_url }}"
    dest: "{{ vault_download_dir }}"
    validate_certs: "{{ vault_validate_certs }}"

- name: verify checksum file
  command: gpg --batch --verify {{ vault_download_dir }}/{{ vault_signature_file }} {{ vault_download_dir }}/{{ vault_checksum_file }}
  changed_when: no
  register: gpg_check
  when: vault_verify_checksum_signature
  failed_when: gpg_check.rc == 1
  tags: gpg_check

- name: Get checksum of vault zip
  shell: "grep {{ vault_zip }} {{ vault_download_dir }}/{{ vault_checksum_file }}"
  register: chksum
  changed_when: False
  tags:
    - skip_ansible_lint

- name: download vault zip
  get_url:
    url: "{{ vault_zip_url }}"
    dest: "{{ vault_download_dir }}/{{ vault_zip }}"
    checksum: "sha256:{{ chksum.stdout.split(' ')|first }}"
    validate_certs: "{{ vault_validate_certs }}"

- name: create vault binary directory
  file:
    state: directory
    path: "{{ vault_bin_dir }}/vault-{{ vault_version }}"
    owner: 0
    group: 0
    recurse: yes

- name: extract vault zip
  unarchive:
    src: "{{ vault_download_dir }}/{{ vault_zip }}"
    dest: "{{ vault_bin_dir }}/vault-{{ vault_version }}"
    copy: no
    creates: "{{ vault_bin_dir }}/vault-{{ vault_version }}/vault"

- name: symlink vault binary
  file:
    state: link
    src: "{{ vault_bin_dir }}/vault-{{ vault_version }}/vault"
    dest: "{{ vault_bin_dir }}/vault"

- name: create service group
  group:
    name: "{{ vault_group }}"
    system: yes
  when: vault_user_managed

- name: create service user
  user:
    name: "{{ vault_user }}"
    group: "{{ vault_group }}"
    createhome: no
    system: yes
    shell: /bin/false
    comment: "vault service user"
  when: vault_user_managed
